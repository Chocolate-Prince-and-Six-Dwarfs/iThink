<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.choco.ithink.DAO.mapper.BbsCommentMapper" >
  <resultMap id="BaseResultMap" type="com.choco.ithink.pojo.BbsComment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="achievement_id" property="achievementId" jdbcType="INTEGER" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="comment_buildTime" property="commentBuildtime" jdbcType="TIMESTAMP" />
    <result column="comment_likeNum" property="commentLikenum" jdbcType="INTEGER" />
    <result column="comment_replyNum" property="commentReplynum" jdbcType="INTEGER" />
    <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
    <result column="to_uid" property="toUid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    comment_id, achievement_id, comment_content, comment_buildTime, comment_likeNum, 
    comment_replyNum, from_uid, to_uid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.choco.ithink.pojo.BbsCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bbs_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bbs_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bbs_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.choco.ithink.pojo.BbsCommentExample" >
    delete from bbs_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.choco.ithink.pojo.BbsComment" >
    insert into bbs_comment (comment_id, achievement_id, comment_content, 
      comment_buildTime, comment_likeNum, comment_replyNum, 
      from_uid, to_uid)
    values (#{commentId,jdbcType=INTEGER}, #{achievementId,jdbcType=INTEGER}, #{commentContent,jdbcType=VARCHAR}, 
      #{commentBuildtime,jdbcType=TIMESTAMP}, #{commentLikenum,jdbcType=INTEGER}, #{commentReplynum,jdbcType=INTEGER}, 
      #{fromUid,jdbcType=INTEGER}, #{toUid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.choco.ithink.pojo.BbsComment" >
    insert into bbs_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="achievementId != null" >
        achievement_id,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="commentBuildtime != null" >
        comment_buildTime,
      </if>
      <if test="commentLikenum != null" >
        comment_likeNum,
      </if>
      <if test="commentReplynum != null" >
        comment_replyNum,
      </if>
      <if test="fromUid != null" >
        from_uid,
      </if>
      <if test="toUid != null" >
        to_uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="achievementId != null" >
        #{achievementId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentBuildtime != null" >
        #{commentBuildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikenum != null" >
        #{commentLikenum,jdbcType=INTEGER},
      </if>
      <if test="commentReplynum != null" >
        #{commentReplynum,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null" >
        #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        #{toUid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.choco.ithink.pojo.BbsCommentExample" resultType="java.lang.Integer" >
    select count(*) from bbs_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bbs_comment
    <set >
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.achievementId != null" >
        achievement_id = #{record.achievementId,jdbcType=INTEGER},
      </if>
      <if test="record.commentContent != null" >
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentBuildtime != null" >
        comment_buildTime = #{record.commentBuildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentLikenum != null" >
        comment_likeNum = #{record.commentLikenum,jdbcType=INTEGER},
      </if>
      <if test="record.commentReplynum != null" >
        comment_replyNum = #{record.commentReplynum,jdbcType=INTEGER},
      </if>
      <if test="record.fromUid != null" >
        from_uid = #{record.fromUid,jdbcType=INTEGER},
      </if>
      <if test="record.toUid != null" >
        to_uid = #{record.toUid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bbs_comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      achievement_id = #{record.achievementId,jdbcType=INTEGER},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      comment_buildTime = #{record.commentBuildtime,jdbcType=TIMESTAMP},
      comment_likeNum = #{record.commentLikenum,jdbcType=INTEGER},
      comment_replyNum = #{record.commentReplynum,jdbcType=INTEGER},
      from_uid = #{record.fromUid,jdbcType=INTEGER},
      to_uid = #{record.toUid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.choco.ithink.pojo.BbsComment" >
    update bbs_comment
    <set >
      <if test="achievementId != null" >
        achievement_id = #{achievementId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentBuildtime != null" >
        comment_buildTime = #{commentBuildtime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikenum != null" >
        comment_likeNum = #{commentLikenum,jdbcType=INTEGER},
      </if>
      <if test="commentReplynum != null" >
        comment_replyNum = #{commentReplynum,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null" >
        from_uid = #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="toUid != null" >
        to_uid = #{toUid,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.choco.ithink.pojo.BbsComment" >
    update bbs_comment
    set achievement_id = #{achievementId,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_buildTime = #{commentBuildtime,jdbcType=TIMESTAMP},
      comment_likeNum = #{commentLikenum,jdbcType=INTEGER},
      comment_replyNum = #{commentReplynum,jdbcType=INTEGER},
      from_uid = #{fromUid,jdbcType=INTEGER},
      to_uid = #{toUid,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>